##################################################
# English [en-US]
# Valaphee <iam@valaphee.com>
##################################################
cyclone.commandnotfound=`c`Command `n`{0}`n` not found.`c`
cyclone.noconsole=`c`Command cannot be executed in the console.`c`
cyclone.nopermission=`c`You have not enough permissions to do this command.`c`
cyclone.usageheader=`m8`       `7`       `7`       `m`< `le`{0}`el` >`m`       `7`       `7`       `8m`
cyclone.usagedescription=`e`{0}`e`
cyclone.usageusage=`o7`Usage `7o8`\u00bb `8e`{0}`e`
cyclone.usagefooter=`m8`       `7`       `7`       `m`< `le`{0}`el` >`m`       `7`       `7`       `8m`
cyclone.now=Now
cyclone.moment=a Moment
cyclone.second=Second
cyclone.seconds=Seconds
cyclone.minute=Minute
cyclone.minutes=Minutes
cyclone.hour=Hour
cyclone.hours=Hours
cyclone.day=Day
cyclone.days=Days
cyclone.month=Month
cyclone.months=Months
cyclone.year=Year
cyclone.years=Years
# help ([Page] [Filter])
cyclone.command.help=Help
cyclone.command.help.desc=Shows the command reference.
cyclone.command.help.usage=help ([Page] [Filter])
cyclone.helpheader=`m8`       `7`       `7`       `m`< `le`HELP`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.helpentry=`e`{0}`e`
cyclone.helpfooter=`m8`       `7`       `7`       `m`< `le`HELP`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.helpnothing=`o7`No search results were found.`7o`

cyclone.queued=`e`Commands need to be confirmed within `n`{0}`n` with the command `n`confirm`n`.`e`
# confirm
cyclone.command.confirm=Confirm
cyclone.command.confirm.desc=Confirms a command.
cyclone.command.confirm.usage=confirm
# abort
cyclone.command.abort=Abort
cyclone.command.abort.desc=Aborts a command.
cyclone.command.abort.usage=abort

################################################################################
# Cyclone
################################################################################
# end [Time]
cyclone.command.end=End
cyclone.command.end.desc=Exits the engine.
cyclone.command.end.usage=end [Time]
cyclone.alreadyend=`e`The engine has already been stopped.`e`
cyclone.end=`a`The engine will be stopped.`a`
cyclone.endwithtime=`a`The engine will be stopped in `n`{0}`n`.`a`

################################################################################
# Cyclone - Group
################################################################################
cyclone.group.notfound=`c`Group `n`{0}`n` not found.`c`
# group list ([Page] [Filter])
cyclone.group.command.list=Groups
cyclone.group.command.list.desc=Shows all known groups.
cyclone.group.command.list.usage=group list ([Page] [Filter])
cyclone.group.listheader=`m8`       `7`       `7`       `m`< `le`GROUPS`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.group.listentry=`o7`#{0}`7o8` \u00bb `8e`{1}`e`
cyclone.group.listfooter=`m8`       `7`       `7`       `m`< `le`GROUPS`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.group.listnothing=`o7`No search results were found.`7o`
# group permission add <Group> [Permission] [Permission 2] ...
cyclone.group.command.permission.add=Add Permission
cyclone.group.command.permission.add.desc=Add permissions to the given group.
cyclone.group.command.permission.add.usage=group permission add <Group> [Permission] [Permission 2] ...
cyclone.group.permission.add=`a`The permission `n`{1}`n` will be added to group `n`{0}`n`.`a`
# group permission remove <Group> [Permission] [Permission 2] ...
cyclone.group.command.permission.remove=Remove Permission
cyclone.group.command.permission.remove.desc=Remove permissions from the given group.
cyclone.group.command.permission.remove.usage=group permission remove <Group> [Permission] [Permission 2] ...
cyclone.group.permission.remove=`a`The permission `n`{1}`n` will be removed from group `n`{0}`n`.`a`
cyclone.group.permission.notremoved=`e`The permission `n`{1}`n` can't be removed from group `n`{0}`n`.`e`
# group permission list <Group> ([Page] [Filter])
cyclone.group.command.permission.list=Permissions
cyclone.group.command.permission.list.desc=Shows all known permissions.
cyclone.group.command.permission.list.usage=group permission list <Group> ([Page] [Filter])
cyclone.group.permission.listheader=`m8`       `7`       `7`       `m`< `le`PERMISSIONS`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.group.permission.listentry=`e`{0}`e`
cyclone.group.permission.listfooter=`m8`       `7`       `7`       `m`< `le`PERMISSIONS`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.group.permission.listnothing=`o7`No search results were found.`7o`
# group inheritance add <Group> [Inheritance] [Inheritance 2] ...
cyclone.group.command.inheritance.add=Add Inheritance
cyclone.group.command.inheritance.add.desc=Add inheritances to the given group.
cyclone.group.command.inheritance.add.usage=group inheritance add <Group> [Inheritance] [Inheritance 2] ...
cyclone.group.inheritance.add=`a`The inheritance `n`{1}`n` will be added to group `n`{0}`n`.`a`
# group inheritance remove <Group> [Inheritance] [Inheritance 2] ...
cyclone.group.command.inheritance.remove=Remove Inheritance
cyclone.group.command.inheritance.remove.desc=Remove inheritances from the given group.
cyclone.group.command.inheritance.remove.usage=group inheritance remove <Group> [Inheritance] [Inheritance 2] ...
cyclone.group.inheritance.remove=`a`The inheritance `n`{1}`n` will be removed from group `n`{0}`n`.`a`
cyclone.group.inheritance.notremoved=`e`The inheritance `n`{1}`n` can't be removed from group `n`{0}`n`.`e`
# group inheritance list <Group> ([Page] [Filter])
cyclone.group.command.inheritance.list=Inheritances
cyclone.group.command.inheritance.list.desc=Shows all known inheritances.
cyclone.group.command.inheritance.list.usage=group inheritance list <Group> ([Page] [Filter])
cyclone.group.inheritance.listheader=`m8`       `7`       `7`       `m`< `le`INHERITANCES`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.group.inheritance.listentry=`e`{0}`e`
cyclone.group.inheritance.listfooter=`m8`       `7`       `7`       `m`< `le`INHERITANCES`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.group.inheritance.listnothing=`o7`No search results were found.`7o`

################################################################################
# Cyclone - User
################################################################################
cyclone.user.notfound=`c`User `n`{0}`n` not found.`c`
cyclone.user.notonline=`e`User `n`{0}`n` is not online.`e`
cyclone.user.tooheavy=`c`User `n`{0}`n` has a higher ranking.`c`
# user list ([Page] [Filter])
cyclone.user.command.list=Users
cyclone.user.command.list.desc=Shows all cached users.
cyclone.user.command.list.usage=user list ([Page] [Filter])
cyclone.user.listheader=`m8`       `7`       `7`       `m`< `le`USERS`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.user.listentry=`7o`#{0}`o78` \u00bb `8e`{1}`e`
cyclone.user.listfooter=`m8`       `7`       `7`       `m`< `le`USERS`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.user.listnothing=`o7`No search results were found.`7o`
# user kick <User> [Reason ...]
cyclone.user.command.kick=Kick
cyclone.user.command.kick.desc=Kicks the given user.
cyclone.user.command.kick.usage=user kick <User> [Reason ...]
cyclone.user.kick=`a`User `n`{0}`n` will be kicked.`a`
cyclone.user.kickwithdesc=`a`User `n`{0}`n` will be kicked because `n`{1}`n`.`a`
# user mute <User> <Duration> [Reason ...]
cyclone.user.command.mute=Mute
cyclone.user.command.mute.desc=Mutes the given user.
cyclone.user.command.mute.usage=user mute <User> <Duration> [Reason ...]
cyclone.user.mute=`a`User `n`{0}`n` will be muted for `n`{1}`n`.`a`
cyclone.user.mutewithdesc=`a`User `n`{0}`n` will be muted because `n`{2}`n` for `n`{1}`n`.`a`
cyclone.user.mutetoolong=`c`You can only mute for `n`{0}`n`.`c`
# user unmute <User>
cyclone.user.command.unmute=Unmute
cyclone.user.command.unmute.desc=Unmutes the given user.
cyclone.user.command.unmute.usage=user unmute <User>
cyclone.user.unmute=`a`User `n`{0}`n` will be unmuted.`a`
cyclone.user.notmuted=`e`User `n`{0}`n` is not muted.`e`
# user ban <User> <Duration> [Reason ...]
cyclone.user.command.ban=Ban
cyclone.user.command.ban.desc=Bans the given user.
cyclone.user.command.ban.usage=user ban <User> <Duration> [Reason ...]
cyclone.user.ban=`a`User `n`{0}`n` will be banned for `n`{1}`n`.`a`
cyclone.user.banwithdesc=`a`User `n`{0}`n` will be banned for `n`{1}`n` because `n`{2}`n`.`a`
cyclone.user.bantoolong=`c`You can only ban for `n`{0}`n`.`c`
# user unban <User>
cyclone.user.command.unban=Unban
cyclone.user.command.unban.desc=Revokes a ban.
cyclone.user.command.unban.usage=user unban <User>
cyclone.user.unban=`a`User `n`{0}`n` will be unbanned.`a`
cyclone.user.notbanned=`e`User \u00b4n`{0}`n` is not banned.`e`
# user <crash|stuck> <User> [Reason ...]
cyclone.user.command.crash=Crash
cyclone.user.command.crash.desc=Crashes a user.
cyclone.user.command.crash.usage=user <crash|stuck> <User> [Reason ...]
cyclone.user.crash=`a`User `n`{0}`n` will be crashed.`a`
cyclone.user.crashwithdesc=`a`User `n`{0}`n` will be crashed because `n`{0}`n`.`a`
# user punish <User> <Reason> [Priority]
cyclone.user.command.punish=Punish
cyclone.user.command.punish.desc=Punishes a user.
cyclone.user.command.punish.usage=user punish <User> <Category> [Priority]
cyclone.user.punish=`a`User `n`{0}`n` will be punished because `n`{1}`n`.`a`
# user who<is|ami> [User]
cyclone.user.command.who=Who is? Who am I?
cyclone.user.command.who.desc=Shows who the user is.
cyclone.user.command.who.usage=user who<is|ami> [User]
cyclone.user.who.header=`m8`       `7`       `7`       `m`< `le`WHO`el` >`m`       `7`       `7`       `8m`
cyclone.user.who.id=`o7`Id`7o8` \u00bb `8e`{0}`e`
cyclone.user.who.name=`o7`Name`7o8` \u00bb `8e`{0}`e`
cyclone.user.who.group=`o7`Group`7o8` \u00bb `8e`{0}`e`
cyclone.user.who.ip=`o7`Ip`7o8` \u00bb `8e`{0}`e`
cyclone.user.who.playedtime=`o7`Played`7o8` \u00bb `8e`{0}`e`
cyclone.user.who.lastjoined=`o7`Last Joined`7o8` \u00bb `8e`{0,date}`e`
cyclone.user.who.footer=`m8`       `7`       `7`       `m`< `le`WHO`el` >`m`       `7`       `7`       `8m`
# user where<is|ami> [User]
cyclone.user.command.where=Where is? Where am I?
cyclone.user.command.where.desc=Shows where the user is.
cyclone.user.command.where.usage=user where<is|ami> [User]
cyclone.user.where.header=`m8`       `7`       `7`       `m`< `le`WHERE`el` >`m`       `7`       `7`       `8m`
cyclone.user.where.proxyserver=`o7`Proxy server`7o8` \u00bb `8e`{0}`e`
cyclone.user.where.server=`o7`Server`7o8` \u00bb `8e`{0}`e`
cyclone.user.where.footer=`m8`       `7`       `7`       `m`< `le`WHERE`el` >`m`       `7`       `7`       `8m`
# user promote <User> <Group>
cyclone.user.command.promote=Promote
cyclone.user.command.promote.desc=Promotes a user.
cyclone.user.command.promote.usage=user promote <User> <Group>
cyclone.user.promote=`a`User `n`{0}`n` promoted to `n`{1}`n`.`a`
# user demote <User> <Group>
cyclone.user.command.demote=Demote
cyclone.user.command.demote.desc=Demotes a user.
cyclone.user.command.demote.usage=user demote <User> <Group>
cyclone.user.demote=`a`User `n`{0}`n` demoted to `n`{1}`n`.`a`
# Disconnect
cyclone.user.disconnect.header=`ml7`                                                 `7lm`
cyclone.user.disconnect.title.unknown=`c`You can't connect to the network.`c`
cyclone.user.disconnect.title.kick=`c`You have been kicked.`c`
cyclone.user.disconnect.title.ban=`c`You have been banned for `n`{0}`n`.`c`
cyclone.user.disconnect.by=`o7`By`7o8` \u00bb `8e`{0}`e`
cyclone.user.disconnect.reason=`o7`Reason`7o8` \u00bb `8e`{0}`e`
cyclone.user.disconnect.remainingtime=`o7`Remaining time`7o8` \u00bb `8e`{0}`e`
cyclone.user.disconnect.cause.maintenance=`c`We are currently in `n`maintenance`n`.`c`
cyclone.user.disconnect.cause.noslots=`c`There are no empty slots available.`c`
cyclone.user.disconnect.cause.nohubs=`c`There are no free lobbies for you available.`c`
cyclone.user.disconnect.info.support=`c`Buy `n`premium`n` on `oe`the website`eo` to still join the server.`c`
cyclone.user.disconnect.info.request=`c`You can create a request on `oe`the website`eo`.`c`
cyclone.user.disconnect.footer=`ml7`                                                 `7lm`

################################################################################
# Cyclone - Connection
################################################################################
# connection
cyclone.connection.command=Connection
cyclone.connection.command.desc=Shows the connection.
cyclone.connection.command.usage=connection
cyclone.connection.header=`m8`       `7`       `7`       `m`< `le`CONNECTION`el` >`m`       `7`       `7`       `8m`
cyclone.connection.incommingnode=`o7`Incomming node`7o8` \u00bb `8e`{1} {0}`e`
cyclone.connection.ownnode=`o7`Own node`7o8` \u00bb `8e`{1} {0}`e`
cyclone.connection.outgoingnode=`o7`Outgoing node`7o8` \u00bb `8e`{1} {0}`e`
cyclone.connection.received=`o7`Received`7o8` \u00bb `8e`{0} packets and {0} byte(s)`e`
cyclone.connection.sent=`o7`Sent`7o8` \u00bb `8e`{0} packets and {0} byte(s)`e`
cyclone.connection.footer=`m8`       `7`       `7`       `m`< `le`CONNECTION`el` >`m`       `7`       `7`       `8m`

################################################################################
# Cyclone - Status
################################################################################
# status <Name> <Content>
cyclone.status.command=Status
cyclone.status.command.desc=Changes the status.
cyclone.status.command.usage=status <Name> [Content ...]
cyclone.status=`a`Status value `n`{0}`n` will be changed to `n`{1}`n`.`a`
cyclone.status.reset=`a`Status value `n`{0}`n` will be resetted.`a`
cyclone.status.failed=`c`Status value `n`{0}`n` could not be changed.`c`
cyclone.status.command.maintenance=Maintenance
cyclone.status.command.maintenance.desc=Changes the status.
cyclone.status.command.maintenance.usage=maintenance
cyclone.maintenance.enable=`e`Maintenance mode will be `a`enabled`a`.`e`
cyclone.maintenance.disable=`e`Maintenance mode will be `c`disabled`c`.`e`

################################################################################
# Cyclone - Server
################################################################################
cyclone.server.notfound=`c`Server `n`{0}`n` not found.`c`
# server list ([Page] [Filter])
cyclone.server.command.list=Servers
cyclone.server.command.list.desc=Shows all known servers.
cyclone.server.command.list.usage=server list ([Page] [Filter])
cyclone.server.listheader=`m8`       `7`       `7`       `m`< `le`SERVER`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.server.listentry=`o7`{0} `7o8`\u00bb `8e`{1}/{2} {3}tps {4}`e`
cyclone.server.listfooter=`m8`       `7`       `7`       `m`< `le`SERVER`el` `a`{0}`8`/`8`{1}`a` >`m`       `7`       `7`       `8m`
cyclone.server.listnothing=`o7`No search results were found.`7o`
# server start <Server|Category>
cyclone.server.command.start=Start
cyclone.server.command.start.desc=Starts either the given server or all of the given category.
cyclone.server.command.start.usage=server start <Server|Category>
cyclone.server.create=`a`A Server of the category `n`{0}`n` will be created and started.`a`
cyclone.server.start=`a`Server of the category `n`{0}`n` and Id `n`{0}`n` will be started.`a`
# server restart [Server|Category]
cyclone.server.command.restart=Restart
cyclone.server.command.restart.desc=Restarts either the actually, the given server or all of the given category.
cyclone.server.command.restart.usage=server restart [Server|Category]
cyclone.server.restart=`a`Server with Id `n`{0}`n` will be restarted.`a`
# server stop [Server|Category]
cyclone.server.command.stop=Stop
cyclone.server.command.stop.desc=Stops either the actually, the given server or all of the given category.
cyclone.server.command.stop.usage=server stop [Server|Category]
cyclone.server.stop=`a`Server with Id `n`{0}`n` will be stopped.`a`
# server switch <Server> [User]
cyclone.server.command.switch=Switch
cyclone.server.command.switch.desc=Switches between servers.
cyclone.server.command.switch.usage=server switch <Server> [User]
cyclone.server.switch=`a`You was send to server with id `n`{0}`n`.`a`
cyclone.server.switchother=`a`User `n`{0}`n` was send to the server with id `n`{0}`n`.`a`
cyclone.server.alreadyswitch=`e`You are already on the server with id `n`{0}`n`.`e`
cyclone.server.alreadyswitchother=`e`User `n`{0}`n` was already sent to the server with id `n`{0}`n`.`e`
# server hub [User]
cyclone.server.command.hub=Switch
cyclone.server.command.hub.desc=Switches to a hub.
cyclone.server.command.hub.usage=server hub [User]
cyclone.server.hub=`a`You was sendet to hub.`a`
cyclone.server.hubother=`a`User `n`{0}`n` was sendet to hub.`a`
cyclone.server.alreadyhub=`e`You are already on the hub.`e`
cyclone.server.alreadyhubother=`e`User `n`{0}`n` was already sent to the hub.`e`
# server persistent
cyclone.server.command.persistent=Persistent
cyclone.server.command.persistent.desc=Makes the current server persistent.
cyclone.server.command.persistent.usage=server persistent
cyclone.server.persistent=`a`Server with id `n`{0}`n` is now persistent.`a`
# server broadcast [Message ...]
cyclone.server.command.broadcast=Broadcast
cyclone.server.command.broadcast.desc=Broadcasts a message.
cyclone.server.command.broadcast.usage=server broadcast [Message ...]

################################################################################
# Cyclone - Server Category
################################################################################
cyclone.category.notfound=`c`Category `n`{0}`n` not found.``c
